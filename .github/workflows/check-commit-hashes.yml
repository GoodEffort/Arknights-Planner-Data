name: Check Commit Hashes
run-name: CheckHashes/${{ github.run_number }}
on:
    schedule:
        - cron: '0 */6 * * *'
    push:
        branches:
            - main

env:
    json-url: https://raw.githubusercontent.com/GoodEffort/Arknights-Planner-Data/main/jsondata/arknights-data.json
    accept-header: application/vnd.github.VERSION.sha
    api-url: https://api.github.com/repos/Kengxxiao/
    cn-repo: ArknightsGameData/commits/master
    yostar-repo: ArknightsGameData_YoStar/commits/main

jobs:
    get-hashes:
        runs-on: ubuntu-latest
        outputs:
            yostar-repo-hash: ${{ steps.get-yostar-repo-hash.outputs.yostar-repo-hash }}
            cn-repo-hash: ${{ steps.get-cn-repo-hash.outputs.cn-repo-hash }}
            yostar-json-hash: ${{ steps.get-yostar-json-hash.outputs.yostar-json-hash }}
            cn-json-hash: ${{ steps.get-cn-json-hash.outputs.cn-json-hash }}
        steps:
            - name: Download arknights-data.json
              run: curl -o arknights-data.json ${{ env.json-url }}
            - name: Get Yostar hash
              id: get-yostar-json-hash
              run: echo "yostar-json-hash=$(jq -r '.commitHashes.yostar' arknights-data.json)" >> "$GITHUB_OUTPUT"
            - name: Get CN hash
              id: get-cn-json-hash
              run: echo "cn-json-hash=$(jq -r '.commitHashes.cn' arknights-data.json)" >> "$GITHUB_OUTPUT"
            - name: Get Yostar repo hash
              id: get-yostar-repo-hash
              run: echo "yostar-repo-hash=$(curl -s ${{ env.api-url }}${{ env.yostar-repo }} | jq -r '.sha')" >> "$GITHUB_OUTPUT"
            - name: Get CN repo hash
              id: get-cn-repo-hash
              run: echo "cn-repo-hash=$(curl -s ${{ env.api-url }}${{ env.cn-repo }} | jq -r '.sha')" >> "$GITHUB_OUTPUT"
    compare-hashes:
        runs-on: ubuntu-latest
        needs: get-hashes
        steps:
          - env:
              yostar-repo-hash: ${{ needs.get-hashes.outputs.yostar-repo-hash }}
              yostar-json-hash: ${{ needs.get-hashes.outputs.yostar-json-hash }}
              cn-repo-hash: ${{ needs.get-hashes.outputs.cn-repo-hash }}
              cn-json-hash: ${{ needs.get-hashes.outputs.cn-json-hash }}
            run: |
              if [ ${{ env.yostar-json-hash }} != ${{ env.yostar-repo-hash }} ] || [ ${{ env.cn-json-hash }} != ${{ env.cn-repo-hash }} ]; then
                  echo "Yostar repo hash is not up to date"
                  exit 1
              fi
            


            
            
